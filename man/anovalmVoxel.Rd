% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anovalmVoxel.R
\name{anovalmVoxel}
\alias{anovalmVoxel}
\title{Computes voxelwise analysis of variance (ANOVA) tables for a Linear Model.}
\usage{
anovalmVoxel(
  image,
  mask,
  fourdOut = NULL,
  formula,
  subjData,
  mc.preschedule = TRUE,
  ncores = 1,
  ...
)
}
\arguments{
\item{image}{Input image of type 'nifti' or vector of path(s) to images. If multiple paths, the script will all mergeNifti() and merge across time.}

\item{mask}{Input mask of type 'nifti' or path to mask. Must be a binary mask}

\item{fourdOut}{To be passed to mergeNifti, This is the path and file name without the suffix to save the fourd file. Default (NULL) means script won't write out 4D image.}

\item{formula}{Must be a formula passed to lm()}

\item{subjData}{Dataframe containing all the covariates used for the analysis}

\item{mc.preschedule}{Argument to be passed to mclapply, whether or not to preschedule the jobs. More info in parallel::mclapply}

\item{ncores}{Number of cores to use}

\item{...}{Additional arguments passed to lm()}
}
\value{
Returns list of models fitted to each voxel over the masked images passed to function.
}
\description{
This function computes analysis of variance tables for the fitted models after running a Linear Model using the stats::lm() function.
The analysis will run in all voxels in the mask and will return the analysis of variance table for each voxel.
Please check the stats documentation for further information about specific arguments used in stats::anova.lm(). Multi-model calls are disabled.
}
\examples{
image <- oro.nifti::nifti(img = array(1:1600, dim =c(4,4,4,25)))
mask <- oro.nifti::nifti(img = array(0:1, dim = c(4,4,4,1)))
set.seed(1)
covs <- data.frame(x = runif(25), y=runif(25))
fm1 <- "~ x + y"
models <- anovalmVoxel(image=image, mask=mask,
              formula=fm1, subjData=covs, ncores = 1)
}
